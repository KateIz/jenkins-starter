apply plugin: 'groovy'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

sourceSets {
    gdsl {
        groovy {
            srcDirs 'gdsl'
            compileClasspath = compileGroovy.classpath
        }
    }
    jenkinsfiles {
        groovy {
            srcDirs 'jenkinsfiles'
            compileClasspath = compileGroovy.classpath
        }
    }
    vars {
        groovy {
            srcDirs 'vars'
            compileClasspath = compileGroovy.classpath
        }
    }
}

configurations {
    jenkinsPlugins
    testImplementation.extendsFrom(jenkinsPlugins)
}

apply from: 'repositories.gradle'
apply from: 'jenkins_plugins.gradle'

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.4.21'

    testImplementation 'cglib:cglib-nodep:3.3.0'
    testImplementation 'com.homeaway.devtools.jenkins:jenkins-spock:2.1.5'
    testImplementation 'com.lesfurets:jenkins-pipeline-unit:1.12'
    testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
    testImplementation 'org.objenesis:objenesis:3.3'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4'
    testImplementation 'org.jenkins-ci.main:jenkins-core:2.346.3'
}

task cleanScriptedPipelinesTestData(type: Delete) {
    delete 'target/test-classes'
}

task prepareSharedLibraries(type: Copy) {
    dependsOn tasks.cleanScriptedPipelinesTestData
    from 'vars'
    include '*'
    into 'target/test-classes'
}

task prepareJenkinsfiles(type: Copy) {
    dependsOn tasks.prepareSharedLibraries
    from 'jenkinsfiles'
    include '*'
    into 'target/test-classes'
}

test {
    dependsOn tasks.prepareJenkinsfiles
}
